{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shuffle from '../../services/shuffle';\nimport { loginAction } from '../../actions';\nconst DIFFICULT_POINTS = {\n  hard: 3,\n  medium: 2,\n  easy: 1\n};\n\nclass Alternatives extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleScore = () => {\n      const scoreBase = 10;\n      const {\n        dispatch,\n        timer,\n        dificuldade\n      } = this.props;\n      const scoreTotal = {\n        score: scoreBase + timer * DIFFICULT_POINTS[dificuldade]\n      };\n      dispatch(loginAction(5));\n    };\n  }\n\n  render() {\n    const {\n      correctAnswer,\n      incorrectAnswers\n    } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"answer-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, alternatives.map(element => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => correctAnswer ? this.handleScore : '',\n      key: element,\n      id: element,\n      type: \"button\",\n      \"data-testid\": element === correctAnswer ? 'correct-answer' : `wrong-answer-${incorrectAnswers.indexOf(element)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, element)));\n  }\n\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string\n}.isRequired;\nexport default Alternatives;","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx"],"names":["React","Component","PropTypes","shuffle","loginAction","DIFFICULT_POINTS","hard","medium","easy","Alternatives","handleScore","scoreBase","dispatch","timer","dificuldade","props","scoreTotal","score","render","correctAnswer","incorrectAnswers","alternatives","map","element","indexOf","propTypes","object","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,MAAM,EAAE,CAAnB;AAAsBC,EAAAA,IAAI,EAAE;AAA5B,CAAzB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCS,WADmC,GACrB,MAAM;AAClB,YAAMC,SAAS,GAAG,EAAlB;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,UAAmC,KAAKC,KAA9C;AACA,YAAMC,UAAU,GAAG;AAAEC,QAAAA,KAAK,EAAEN,SAAS,GAAIE,KAAK,GAAGR,gBAAgB,CAACS,WAAD;AAA9C,OAAnB;AACAF,MAAAA,QAAQ,CAACR,WAAW,CAAC,CAAD,CAAZ,CAAR;AACD,KANkC;AAAA;;AAQnCc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAsC,KAAKL,KAAjD;AACA,UAAMM,YAAY,GAAG,CAACF,aAAD,EAAgB,GAAGC,gBAAnB,CAArB;AACAjB,IAAAA,OAAO,CAACkB,YAAD,CAAP;AAEA,wBACE;AAAK,qBAAY,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,CACVC,GADF,CACOC,OAAD,iBACH;AACE,MAAA,OAAO,EAAG,MAAOJ,aAAa,GAAG,KAAKT,WAAR,GAAsB,EADtD;AAEE,MAAA,GAAG,EAAGa,OAFR;AAGE,MAAA,EAAE,EAAGA,OAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,qBACEA,OAAO,KAAKJ,aAAZ,GACI,gBADJ,GAEK,gBAAeC,gBAAgB,CAACI,OAAjB,CAAyBD,OAAzB,CAAkC,EAR1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWIA,OAXJ,CAFH,CADH,CADF;AAoBD;;AAjCkC;;AAoCrCd,YAAY,CAACgB,SAAb,GAAyB;AACvBL,EAAAA,gBAAgB,EAAElB,SAAS,CAACwB,MADL;AAEvBP,EAAAA,aAAa,EAAEjB,SAAS,CAACyB;AAFF,EAGvBC,UAHF;AAKA,eAAenB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shuffle from '../../services/shuffle';\nimport { loginAction } from '../../actions';\n\nconst DIFFICULT_POINTS = { hard: 3, medium: 2, easy: 1 };\n\nclass Alternatives extends Component {\n  handleScore = () => {\n    const scoreBase = 10;\n    const { dispatch, timer, dificuldade } = this.props;\n    const scoreTotal = { score: scoreBase + (timer * DIFFICULT_POINTS[dificuldade]) };\n    dispatch(loginAction(5));\n  }\n\n  render() {\n    const { correctAnswer, incorrectAnswers } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n\n    return (\n      <div data-testid=\"answer-options\">\n        {alternatives\n          .map((element) => (\n            <button\n              onClick={ () => (correctAnswer ? this.handleScore : '') }\n              key={ element }\n              id={ element }\n              type=\"button\"\n              data-testid={\n                element === correctAnswer\n                  ? 'correct-answer'\n                  : `wrong-answer-${incorrectAnswers.indexOf(element)}`\n              }\n            >\n              { element }\n            </button>\n          ))}\n      </div>\n    );\n  }\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string,\n}.isRequired;\n\nexport default Alternatives;\n"]},"metadata":{},"sourceType":"module"}
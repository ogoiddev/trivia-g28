{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shuffle from '../../services/shuffle';\nimport { loginAction } from '../../actions';\nconst DIFFICULT_POINTS = {\n  hard: 3,\n  medium: 2,\n  easy: 1\n};\n\nclass Alternatives extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = () => {\n      this.handleScore();\n    };\n\n    this.handleScore = () => {\n      const scoreBase = 10;\n      const {\n        dispatch,\n        timer,\n        dificuldade\n      } = this.props;\n      const scoreTotal = {\n        score: scoreBase + timer * DIFFICULT_POINTS[dificuldade]\n      };\n      dispatch(loginAction(scoreTotal));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      correctAnswer,\n      incorrectAnswers\n    } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n  }\n\n  render() {\n    const {\n      correctAnswer,\n      incorrectAnswers\n    } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"answer-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, alternatives.map(element => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      key: element,\n      type: \"button\",\n      \"data-testid\": element === correctAnswer ? 'correct-answer' : `wrong-answer-${incorrectAnswers.indexOf(element)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, element)));\n  }\n\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string\n}.isRequired;\nexport default connect()(Alternatives);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx"],"names":["React","Component","PropTypes","connect","shuffle","loginAction","DIFFICULT_POINTS","hard","medium","easy","Alternatives","handleClick","handleScore","scoreBase","dispatch","timer","dificuldade","props","scoreTotal","score","componentDidMount","correctAnswer","incorrectAnswers","alternatives","render","map","element","indexOf","propTypes","object","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,MAAM,EAAE,CAAnB;AAAsBC,EAAAA,IAAI,EAAE;AAA5B,CAAzB;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAOnCU,WAPmC,GAOrB,MAAM;AAClB,WAAKC,WAAL;AACD,KATkC;;AAAA,SAWnCA,WAXmC,GAWrB,MAAM;AAClB,YAAMC,SAAS,GAAG,EAAlB;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,UAAmC,KAAKC,KAA9C;AACA,YAAMC,UAAU,GAAG;AAAEC,QAAAA,KAAK,EAAEN,SAAS,GAAIE,KAAK,GAAGT,gBAAgB,CAACU,WAAD;AAA9C,OAAnB;AACAF,MAAAA,QAAQ,CAACT,WAAW,CAACa,UAAD,CAAZ,CAAR;AACD,KAhBkC;AAAA;;AACnCE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAsC,KAAKL,KAAjD;AACA,UAAMM,YAAY,GAAG,CAACF,aAAD,EAAgB,GAAGC,gBAAnB,CAArB;AACAlB,IAAAA,OAAO,CAACmB,YAAD,CAAP;AACD;;AAaDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAsC,KAAKL,KAAjD;AACA,UAAMM,YAAY,GAAG,CAACF,aAAD,EAAgB,GAAGC,gBAAnB,CAArB;AAEA,wBACE;AAAK,qBAAY,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YAAY,CACVE,GADF,CACOC,OAAD,iBACH;AACE,MAAA,OAAO,EAAG,KAAKf,WADjB;AAEE,MAAA,GAAG,EAAGe,OAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,qBACEA,OAAO,KAAKL,aAAZ,GACI,gBADJ,GAEK,gBAAeC,gBAAgB,CAACK,OAAjB,CAAyBD,OAAzB,CAAkC,EAP1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUIA,OAVJ,CAFH,CADH,CADF;AAmBD;;AAzCkC;;AA4CrChB,YAAY,CAACkB,SAAb,GAAyB;AACvBN,EAAAA,gBAAgB,EAAEpB,SAAS,CAAC2B,MADL;AAEvBR,EAAAA,aAAa,EAAEnB,SAAS,CAAC4B;AAFF,EAGvBC,UAHF;AAKA,eAAe5B,OAAO,GAAGO,YAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shuffle from '../../services/shuffle';\nimport { loginAction } from '../../actions';\n\nconst DIFFICULT_POINTS = { hard: 3, medium: 2, easy: 1 };\n\nclass Alternatives extends Component {\n  componentDidMount() {\n    const { correctAnswer, incorrectAnswers } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n  }\n\n  handleClick = () => {\n    this.handleScore();\n  }\n\n  handleScore = () => {\n    const scoreBase = 10;\n    const { dispatch, timer, dificuldade } = this.props;\n    const scoreTotal = { score: scoreBase + (timer * DIFFICULT_POINTS[dificuldade]) };\n    dispatch(loginAction(scoreTotal));\n  }\n\n  render() {\n    const { correctAnswer, incorrectAnswers } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n\n    return (\n      <div data-testid=\"answer-options\">\n        {alternatives\n          .map((element) => (\n            <button\n              onClick={ this.handleClick }\n              key={ element }\n              type=\"button\"\n              data-testid={\n                element === correctAnswer\n                  ? 'correct-answer'\n                  : `wrong-answer-${incorrectAnswers.indexOf(element)}`\n              }\n            >\n              { element }\n            </button>\n          ))}\n      </div>\n    );\n  }\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string,\n}.isRequired;\n\nexport default connect()(Alternatives);\n"]},"metadata":{},"sourceType":"module"}
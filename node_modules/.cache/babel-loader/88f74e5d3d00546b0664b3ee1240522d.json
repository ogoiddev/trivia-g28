{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { Link } from 'react-router-dom';\nimport { fetchToken } from '../services/API';\nimport { loginAction } from '../actions';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.changeHandler = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      }, this.validateButton);\n    };\n\n    this.validateButton = () => {\n      const {\n        gravatarEmail,\n        name\n      } = this.state;\n      const TWO = 2;\n      const VALIDATION = gravatarEmail.length > TWO && name.length > TWO;\n      this.setState(VALIDATION ? {\n        buttonDisable: false\n      } : {\n        buttonDisable: true\n      });\n    };\n\n    this.clickHandler = e => {\n      e.preventDefault();\n      const {\n        loginInfo,\n        history\n      } = this.props;\n      const {\n        gravatarEmail,\n        name\n      } = this.state;\n      const hash = md5(gravatarEmail).toString();\n      const gravatarImg = `https://www.gravatar.com/avatar/${hash}`;\n      loginInfo({\n        name,\n        gravatarEmail,\n        gravatarImg,\n        score: 0,\n        assertions: 0\n      });\n      history.push('/game');\n    };\n\n    this.state = {\n      gravatarEmail: '',\n      name: '',\n      buttonDisable: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchingToken\n    } = this.props;\n    fetchingToken();\n  }\n\n  render() {\n    const {\n      gravatarEmail,\n      name,\n      buttonDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Email do Gravatar:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      name: \"gravatarEmail\",\n      value: gravatarEmail,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"senha\",\n      \"data-testid\": \"input-player-name\",\n      name: \"name\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      disabled: buttonDisable,\n      onClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Entrar\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/config\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Configura\\xE7\\xF5es\")));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchingToken: fetchToken,\n  loginInfo: loginAction\n};\nHome.propTypes = {\n  fetchingToken: func,\n  history: func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Login.jsx"],"names":["React","connect","func","md5","Link","fetchToken","loginAction","Home","Component","constructor","changeHandler","target","name","value","setState","validateButton","gravatarEmail","state","TWO","VALIDATION","length","buttonDisable","clickHandler","e","preventDefault","loginInfo","history","props","hash","toString","gravatarImg","score","assertions","push","componentDidMount","fetchingToken","render","mapDispatchToProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { Link } from 'react-router-dom';\nimport { fetchToken } from '../services/API';\nimport { loginAction } from '../actions';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gravatarEmail: '',\n      name: '',\n      buttonDisable: true,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchingToken } = this.props;\n    fetchingToken();\n  }\n\n  changeHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.validateButton);\n  }\n\n  validateButton = () => {\n    const { gravatarEmail, name } = this.state;\n    const TWO = 2;\n    const VALIDATION = gravatarEmail.length > TWO && name.length > TWO;\n\n    this.setState((VALIDATION) ? { buttonDisable: false } : { buttonDisable: true });\n  }\n\n  clickHandler = (e) => {\n    e.preventDefault();\n    const { loginInfo, history } = this.props;\n    const { gravatarEmail, name } = this.state;\n    const hash = md5(gravatarEmail).toString();\n    const gravatarImg = `https://www.gravatar.com/avatar/${hash}`;\n\n    loginInfo({ name, gravatarEmail, gravatarImg, score: 0, assertions: 0 });\n\n    history.push('/game');\n  }\n\n  render() {\n    const { gravatarEmail, name, buttonDisable } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"email\">\n          Email do Gravatar:\n          <input\n            type=\"text\"\n            id=\"email\"\n            data-testid=\"input-gravatar-email\"\n            name=\"gravatarEmail\"\n            value={ gravatarEmail }\n            onChange={ this.changeHandler }\n          />\n        </label>\n\n        <label htmlFor=\"senha\">\n          Nome:\n          <input\n            type=\"text\"\n            id=\"senha\"\n            data-testid=\"input-player-name\"\n            name=\"name\"\n            value={ name }\n            onChange={ this.changeHandler }\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          data-testid=\"btn-play\"\n          disabled={ buttonDisable }\n          onClick={ this.clickHandler }\n        >\n          Entrar\n        </button>\n\n        <Link to=\"/config\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-settings\"\n          >\n            Configurações\n          </button>\n        </Link>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchingToken: fetchToken,\n  loginInfo: loginAction,\n};\n\nHome.propTypes = {\n  fetchingToken: func,\n  history: func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}
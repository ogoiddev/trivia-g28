{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Timer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { timerAction } from '../../actions';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n\n    this.stopTimer = prevState => {\n      const {\n        handleTimer,\n        stop\n      } = this.props;\n      const ZERO = 0;\n      const {\n        timer\n      } = this.state;\n\n      if (prevState.timer !== timer && timer === ZERO) {\n        clearInterval(this.intervalId);\n      }\n\n      if (stop) {\n        clearInterval(this.intervalId);\n        handleTimer(timer);\n      }\n    };\n\n    this.startTimer = () => {\n      const ONE_SECOND = 1000;\n      this.intervalId = setInterval(() => {\n        this.setState(prev => ({\n          timer: prev.timer - 1\n        }));\n      }, ONE_SECOND);\n    };\n\n    this.state = {\n      timer: 30\n    };\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(props, prevState) {\n    this.stopTimer(prevState);\n  }\n\n  render() {\n    const {\n      timer\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, ' ', \"Tempo:\", ' ', timer);\n  }\n\n}\n\nTimer.propTypes = {\n  handleTimer: PropTypes.string,\n  stop: PropTypes.bool\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  stop: state.timer.stop\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleTimer: timer => dispatch(timerAction(timer))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Timer.jsx"],"names":["React","Component","connect","PropTypes","timerAction","Timer","constructor","stopTimer","prevState","handleTimer","stop","props","ZERO","timer","state","clearInterval","intervalId","startTimer","ONE_SECOND","setInterval","setState","prev","componentDidMount","componentDidUpdate","render","propTypes","string","bool","isRequired","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,SAfc,GAeDC,SAAD,IAAe;AACzB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwB,KAAKC,KAAnC;AACA,YAAMC,IAAI,GAAG,CAAb;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;;AACA,UAAIN,SAAS,CAACK,KAAV,KAAoBA,KAApB,IAA6BA,KAAK,KAAKD,IAA3C,EAAiD;AAC/CG,QAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACD;;AACD,UAAIN,IAAJ,EAAU;AACRK,QAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACAP,QAAAA,WAAW,CAACI,KAAD,CAAX;AACD;AACF,KA1Ba;;AAAA,SA4BdI,UA5Bc,GA4BD,MAAM;AACjB,YAAMC,UAAU,GAAG,IAAnB;AAEA,WAAKF,UAAL,GAAkBG,WAAW,CAAC,MAAM;AAClC,aAAKC,QAAL,CAAeC,IAAD,KAAW;AAAER,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KAAL,GAAa;AAAtB,SAAX,CAAd;AACD,OAF4B,EAE1BK,UAF0B,CAA7B;AAGD,KAlCa;;AAEZ,SAAKJ,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,UAAL;AACD;;AAEDM,EAAAA,kBAAkB,CAACZ,KAAD,EAAQH,SAAR,EAAmB;AACnC,SAAKD,SAAL,CAAeC,SAAf;AACD;;AAuBDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,YAGG,GAHH,EAIGD,KAJH,CADF;AAQD;;AA/C2B;;AAkD9BR,KAAK,CAACoB,SAAN,GAAkB;AAChBhB,EAAAA,WAAW,EAAEN,SAAS,CAACuB,MADP;AAEhBhB,EAAAA,IAAI,EAAEP,SAAS,CAACwB;AAFA,EAGhBC,UAHF;;AAKA,MAAMC,eAAe,GAAIf,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEI,KAAK,CAACD,KAAN,CAAYH;AADgB,CAAZ,CAAxB;;AAIA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,WAAW,EAAGI,KAAD,IAAWkB,QAAQ,CAAC3B,WAAW,CAACS,KAAD,CAAZ;AADQ,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAAC2B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { timerAction } from '../../actions';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30,\n    };\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(props, prevState) {\n    this.stopTimer(prevState);\n  }\n\n  stopTimer = (prevState) => {\n    const { handleTimer, stop } = this.props;\n    const ZERO = 0;\n    const { timer } = this.state;\n    if (prevState.timer !== timer && timer === ZERO) {\n      clearInterval(this.intervalId);\n    }\n    if (stop) {\n      clearInterval(this.intervalId);\n      handleTimer(timer);\n    }\n  }\n\n  startTimer = () => {\n    const ONE_SECOND = 1000;\n\n    this.intervalId = setInterval(() => {\n      this.setState((prev) => ({ timer: prev.timer - 1 }));\n    }, ONE_SECOND);\n  }\n\n  render() {\n    const { timer } = this.state;\n    return (\n      <p>\n        {' '}\n        Tempo:\n        {' '}\n        {timer}\n      </p>\n    );\n  }\n}\n\nTimer.propTypes = {\n  handleTimer: PropTypes.string,\n  stop: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  stop: state.timer.stop,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleTimer: (timer) => dispatch(timerAction(timer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}
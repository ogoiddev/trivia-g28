{"ast":null,"code":"import { LOGIN_SUCCEEDED, SCORE_SUCCEEDED } from '../actions';\nconst INITIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  gravatarImg: '',\n  score: 0,\n  assertions: 0\n};\n\nfunction player() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_SUCCEEDED:\n      return { ...state,\n        ...action.payload\n      };\n\n    case SCORE_SUCCEEDED:\n      return { ...state,\n        score: state.score + action.payload,\n        assertions: state.assertions + 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default player;","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/reducers/login.js"],"names":["LOGIN_SUCCEEDED","SCORE_SUCCEEDED","INITIAL_STATE","name","gravatarEmail","gravatarImg","score","assertions","player","state","action","type","payload"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,YAAjD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,aAAa,EAAE,EAFK;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,KAAK,EAAE,CAJa;AAKpBC,EAAAA,UAAU,EAAE;AALQ,CAAtB;;AAQA,SAASC,MAAT,GAA+C;AAAA,MAA/BC,KAA+B,uEAAvBP,aAAuB;AAAA,MAARQ,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,eAAL;AACE,aAAO,EACL,GAAGS,KADE;AAEL,WAAGC,MAAM,CAACE;AAFL,OAAP;;AAIF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAFvB;AAGLL,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmB;AAH1B,OAAP;;AAKF;AACE,aAAOE,KAAP;AAbF;AAeD;;AAED,eAAeD,MAAf","sourcesContent":["import { LOGIN_SUCCEEDED, SCORE_SUCCEEDED } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  gravatarImg: '',\n  score: 0,\n  assertions: 0,\n};\n\nfunction player(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case LOGIN_SUCCEEDED:\n    return {\n      ...state,\n      ...action.payload,\n    };\n  case SCORE_SUCCEEDED:\n    return {\n      ...state,\n      score: state.score + action.payload,\n      assertions: state.assertions + 1,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default player;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Ranking.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { questionIndex } from '../actions';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      ranking: JSON.parse(LocalStorage.getItem('ranking'))\n    });\n  }\n\n  render() {\n    const {\n      ranking\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"ranking-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, ranking.map((player, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: player.name,\n      \"data-testid\": `player-name-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, ranking.name))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const {\n          history,\n          dispatch\n        } = this.props;\n        dispatch(questionIndex(0));\n        history.push('/');\n      },\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Play Again\"), \"Ranking\");\n  }\n\n}\n\nRanking.propTypes = {\n  history: func,\n  dispatch: func\n}.isDisabled;\n\nconst mapStateToProps = _ref => {\n  let {\n    player\n  } = _ref;\n  return {\n    // [\n    //   { name: nome - da - pessoa, score: 10, picture: url - da - foto - no - gravatar }\n    // ]\n    player\n  };\n};\n\nexport default connect(mapStateToProps)(Ranking);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Ranking.jsx"],"names":["React","Component","connect","func","questionIndex","Ranking","constructor","props","state","ranking","componentDidMount","setState","JSON","parse","LocalStorage","getItem","render","map","player","index","name","history","dispatch","push","propTypes","isDisabled","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAEG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX;AAAX,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBAEV;AACE,MAAA,GAAG,EAAGD,MAAM,CAACE,IADf;AAEE,qBAAe,eAAcD,KAAM,EAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGV,OAAO,CAACW,IAJX,CAFF,CAFJ,CADF,eAcE;AACE,MAAA,OAAO,EAAG,MAAM;AACd,cAAM;AAAEC,UAAAA,OAAF;AAAWC,UAAAA;AAAX,YAAwB,KAAKf,KAAnC;AACAe,QAAAA,QAAQ,CAAClB,aAAa,CAAC,CAAD,CAAd,CAAR;AACAiB,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,OALH;AAME,MAAA,IAAI,EAAC,QANP;AAOE,qBAAY,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,YADF;AA6BD;;AA3C6B;;AA8ChClB,OAAO,CAACmB,SAAR,GAAoB;AAClBH,EAAAA,OAAO,EAAElB,IADS;AAElBmB,EAAAA,QAAQ,EAAEnB;AAFQ,EAGlBsB,UAHF;;AAKA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAER,IAAAA;AAAF,GAAD;AAAA,SAAiB;AACvC;AACA;AACA;AACAA,IAAAA;AAJuC,GAAjB;AAAA,CAAxB;;AAOA,eAAehB,OAAO,CAACwB,eAAD,CAAP,CAAyBrB,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { questionIndex } from '../actions';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ ranking: JSON.parse(LocalStorage.getItem('ranking')) });\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <div data-testid=\"ranking-title\">\n        <section>\n          {\n            ranking.map((player, index) => (\n\n              <span\n                key={ player.name }\n                data-testid={ `player-name-${index}` }\n              >\n                {ranking.name}\n              </span>\n            ))\n          }\n        </section>\n        <button\n          onClick={ () => {\n            const { history, dispatch } = this.props;\n            dispatch(questionIndex(0));\n            history.push('/');\n          } }\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n        >\n          Play Again\n        </button>\n        Ranking\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: func,\n  dispatch: func,\n}.isDisabled;\n\nconst mapStateToProps = ({ player }) => ({\n  // [\n  //   { name: nome - da - pessoa, score: 10, picture: url - da - foto - no - gravatar }\n  // ]\n  player,\n});\n\nexport default connect(mapStateToProps)(Ranking);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { fetchToken } from '../services/API';\nimport { loginAction } from '../actions';\nimport Loginstyle from './cssPages/Login.module.css';\nimport LogoTrivia from '../images/Trivia_Logo.png';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.changeHandler = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      }, this.validateButton);\n    };\n\n    this.validateButton = () => {\n      const {\n        gravatarEmail,\n        name\n      } = this.state;\n      const TWO = 2;\n      const VALIDATION = gravatarEmail.length > TWO && name.length > TWO;\n      this.setState(VALIDATION ? {\n        buttonDisable: false\n      } : {\n        buttonDisable: true\n      });\n    };\n\n    this.clickHandler = e => {\n      e.preventDefault();\n      const {\n        loginInfo,\n        history\n      } = this.props;\n\n      if (e.target.name === 'config') {\n        history.push('/config');\n      }\n\n      const {\n        gravatarEmail,\n        name\n      } = this.state;\n      const hash = md5(gravatarEmail).toString();\n      const gravatarImg = `https://www.gravatar.com/avatar/${hash}`;\n      loginInfo({\n        name,\n        gravatarEmail,\n        gravatarImg,\n        score: 0,\n        assertions: 0\n      });\n      history.push('/game');\n    };\n\n    this.state = {\n      gravatarEmail: '',\n      name: '',\n      buttonDisable: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchingToken\n    } = this.props;\n    fetchingToken();\n  }\n\n  render() {\n    const {\n      gravatarEmail,\n      name,\n      buttonDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: Loginstyle.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: Loginstyle.logo,\n      src: LogoTrivia,\n      alt: \"Logo do game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: Loginstyle.container__form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: Loginstyle.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: Loginstyle.label,\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"EMAIL DO GRAVATAR\", /*#__PURE__*/React.createElement(\"input\", {\n      className: Loginstyle.input,\n      type: \"text\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      name: \"gravatarEmail\",\n      value: gravatarEmail,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: Loginstyle.label,\n      htmlFor: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"NOME\", /*#__PURE__*/React.createElement(\"input\", {\n      className: Loginstyle.input,\n      type: \"text\",\n      id: \"senha\",\n      \"data-testid\": \"input-player-name\",\n      name: \"name\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: Loginstyle.container__btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: Loginstyle.btn__enter,\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      disabled: buttonDisable,\n      onClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Entrar\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: Loginstyle.btn__config,\n      name: \"config\",\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      onClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Configura\\xE7\\xF5es\")))));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchingToken: fetchToken,\n  loginInfo: loginAction\n};\nHome.propTypes = {\n  fetchingToken: func,\n  history: func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/Login.jsx"],"names":["React","connect","func","md5","fetchToken","loginAction","Loginstyle","LogoTrivia","Home","Component","constructor","changeHandler","target","name","value","setState","validateButton","gravatarEmail","state","TWO","VALIDATION","length","buttonDisable","clickHandler","e","preventDefault","loginInfo","history","props","push","hash","toString","gravatarImg","score","assertions","componentDidMount","fetchingToken","render","container","logo","container__form","form","label","input","container__btn","btn__enter","btn__config","mapDispatchToProps","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { fetchToken } from '../services/API';\nimport { loginAction } from '../actions';\nimport Loginstyle from './cssPages/Login.module.css';\nimport LogoTrivia from '../images/Trivia_Logo.png';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gravatarEmail: '',\n      name: '',\n      buttonDisable: true,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchingToken } = this.props;\n    fetchingToken();\n  }\n\n  changeHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.validateButton);\n  }\n\n  validateButton = () => {\n    const { gravatarEmail, name } = this.state;\n    const TWO = 2;\n    const VALIDATION = gravatarEmail.length > TWO && name.length > TWO;\n\n    this.setState((VALIDATION) ? { buttonDisable: false } : { buttonDisable: true });\n  }\n\n  clickHandler = (e) => {\n    e.preventDefault();\n    const { loginInfo, history } = this.props;\n    if (e.target.name === 'config') {\n      history.push('/config');\n    }\n    const { gravatarEmail, name } = this.state;\n    const hash = md5(gravatarEmail).toString();\n    const gravatarImg = `https://www.gravatar.com/avatar/${hash}`;\n\n    loginInfo({ name, gravatarEmail, gravatarImg, score: 0, assertions: 0 });\n\n    history.push('/game');\n  }\n\n  render() {\n    const { gravatarEmail, name, buttonDisable } = this.state;\n    return (\n      <div className={ Loginstyle.container }>\n        <img className={ Loginstyle.logo } src={ LogoTrivia } alt=\"Logo do game\" />\n\n        <div className={ Loginstyle.container__form }>\n          <form className={ Loginstyle.form }>\n\n            <label\n              className={ Loginstyle.label }\n              htmlFor=\"email\"\n            >\n              EMAIL DO GRAVATAR\n              <input\n                className={ Loginstyle.input }\n                type=\"text\"\n                id=\"email\"\n                data-testid=\"input-gravatar-email\"\n                name=\"gravatarEmail\"\n                value={ gravatarEmail }\n                onChange={ this.changeHandler }\n              />\n            </label>\n\n            <label\n              className={ Loginstyle.label }\n              htmlFor=\"senha\"\n            >\n              NOME\n              <input\n                className={ Loginstyle.input }\n                type=\"text\"\n                id=\"senha\"\n                data-testid=\"input-player-name\"\n                name=\"name\"\n                value={ name }\n                onChange={ this.changeHandler }\n              />\n            </label>\n\n            <section className={ Loginstyle.container__btn }>\n\n              <button\n                className={ Loginstyle.btn__enter }\n                type=\"submit\"\n                data-testid=\"btn-play\"\n                disabled={ buttonDisable }\n                onClick={ this.clickHandler }\n              >\n                Entrar\n              </button>\n              <button\n                className={ Loginstyle.btn__config }\n                name=\"config\"\n                type=\"button\"\n                data-testid=\"btn-settings\"\n                onClick={ this.clickHandler }\n              >\n                Configurações\n              </button>\n            </section>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchingToken: fetchToken,\n  loginInfo: loginAction,\n};\n\nHome.propTypes = {\n  fetchingToken: func,\n  history: func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}
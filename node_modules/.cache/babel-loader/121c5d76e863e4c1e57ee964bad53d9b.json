{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/FeedBack.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport Header from '../components/Header';\nimport { questionIndex } from '../actions';\n\nclass FeedBack extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.setLocalStorage = () => {\n      const {\n        ranking\n      } = this.props;\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    };\n  }\n\n  componentDidMount() {\n    this.setLocalStorage();\n  }\n\n  render() {\n    const {\n      player\n    } = this.props;\n    const counterToMessage = 3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, player.assertions < counterToMessage ? 'Could be better...' : 'Well Done!'), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, player.score), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, player.assertions), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const {\n          history,\n          dispatch\n        } = this.props;\n        dispatch(questionIndex(0));\n        history.push('/');\n      },\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const {\n          history\n        } = this.props;\n        history.push('/ranking');\n      },\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Ranking\")));\n  }\n\n}\n\nFeedBack.propTypes = {\n  player: object\n}.isRequired;\n\nconst mapStateToProps = _ref => {\n  let {\n    player,\n    ranking\n  } = _ref;\n  return {\n    player,\n    ranking\n  };\n};\n\nexport default connect(mapStateToProps)(FeedBack);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/FeedBack.jsx"],"names":["React","Component","connect","object","Header","questionIndex","FeedBack","setLocalStorage","ranking","props","localStorage","setItem","JSON","stringify","componentDidMount","render","player","counterToMessage","assertions","score","history","dispatch","push","propTypes","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAK/BM,eAL+B,GAKb,MAAM;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAhC;AACD,KAR8B;AAAA;;AAC/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,eAAL;AACD;;AAODQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKP,KAAxB;AACA,UAAMQ,gBAAgB,GAAG,CAAzB;AACA,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,qBAAY,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,CAACE,UAAP,GAAoBD,gBAApB,GACG,oBADH,GAC0B,YAF7B,CAFF,eAME;AAAM,qBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,MAAM,CAACG,KAAjD,CANF,eAOE;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CH,MAAM,CAACE,UAApD,CAPF,eAQE;AACE,MAAA,OAAO,EAAG,MAAM;AACd,cAAM;AAAEE,UAAAA,OAAF;AAAWC,UAAAA;AAAX,YAAwB,KAAKZ,KAAnC;AACAY,QAAAA,QAAQ,CAAChB,aAAa,CAAC,CAAD,CAAd,CAAR;AACAe,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,OALH;AAME,MAAA,IAAI,EAAC,QANP;AAOE,qBAAY,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAmBE;AACE,MAAA,OAAO,EAAG,MAAM;AACd,cAAM;AAAEF,UAAAA;AAAF,YAAc,KAAKX,KAAzB;AACAW,QAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACD,OAJH;AAKE,MAAA,IAAI,EAAC,QALP;AAME,qBAAY,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBF,CAFF,CADF;AAoCD;;AAjD8B;;AAoDjChB,QAAQ,CAACiB,SAAT,GAAqB;AACnBP,EAAAA,MAAM,EAAEb;AADW,EAEnBqB,UAFF;;AAIA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAET,IAAAA,MAAF;AAAUR,IAAAA;AAAV,GAAD;AAAA,SAA0B;AAChDQ,IAAAA,MADgD;AAEhDR,IAAAA;AAFgD,GAA1B;AAAA,CAAxB;;AAKA,eAAeN,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport Header from '../components/Header';\nimport { questionIndex } from '../actions';\n\nclass FeedBack extends Component {\n  componentDidMount() {\n    this.setLocalStorage();\n  }\n\n  setLocalStorage = () => {\n    const { ranking } = this.props;\n    localStorage.setItem('ranking', JSON.stringify(ranking));\n  }\n\n  render() {\n    const { player } = this.props;\n    const counterToMessage = 3;\n    return (\n      <>\n        <Header />\n        <div>\n          <span>Feedback</span>\n          <span data-testid=\"feedback-text\">\n            {player.assertions < counterToMessage\n              ? 'Could be better...' : 'Well Done!'}\n          </span>\n          <span data-testid=\"feedback-total-score\">{player.score}</span>\n          <span data-testid=\"feedback-total-question\">{player.assertions}</span>\n          <button\n            onClick={ () => {\n              const { history, dispatch } = this.props;\n              dispatch(questionIndex(0));\n              history.push('/');\n            } }\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n          >\n            Play Again\n          </button>\n          <button\n            onClick={ () => {\n              const { history } = this.props;\n              history.push('/ranking');\n            } }\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n          >\n            Ranking\n          </button>\n\n        </div>\n      </>\n    );\n  }\n}\n\nFeedBack.propTypes = {\n  player: object,\n}.isRequired;\n\nconst mapStateToProps = ({ player, ranking }) => ({\n  player,\n  ranking,\n});\n\nexport default connect(mapStateToProps)(FeedBack);\n"]},"metadata":{},"sourceType":"module"}
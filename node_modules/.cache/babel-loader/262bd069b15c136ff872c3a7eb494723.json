{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/FeedBack.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport Header from '../components/Header';\nimport { questionIndex, setRanking } from '../actions';\nimport * as S from './cssPages/Feedback';\n\nclass FeedBack extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.setLocalStorage = () => {\n      const {\n        player: {\n          gravatarImg,\n          name,\n          score\n        },\n        dispatch,\n        ranking\n      } = this.props;\n      dispatch(setRanking({\n        name,\n        score,\n        gravatarImg\n      }));\n      let rankingStorage = JSON.parse(localStorage.getItem('ranking'));\n\n      if (rankingStorage) {\n        rankingStorage.push(...ranking);\n      } else {\n        rankingStorage = ranking;\n      }\n\n      localStorage.setItem('ranking', JSON.stringify(rankingStorage));\n    };\n  }\n\n  componentDidMount() {\n    this.setLocalStorage();\n  }\n\n  render() {\n    const {\n      player: {\n        score,\n        assertions\n      }\n    } = this.props;\n    const counterToMessage = 3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(S.Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Feedback\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, assertions < counterToMessage ? 'Could be better...' : 'Well Done!'), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Voc\\xEA acertou\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"$\", assertions, ' '), assertions === 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"quest\\xE3o!\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"quest\\xF5es!\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, 'E fez um total de pontos: ', /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const {\n          history,\n          dispatch\n        } = this.props;\n        dispatch(questionIndex(0));\n        history.push('/');\n      },\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const {\n          history\n        } = this.props;\n        history.push('/ranking');\n      },\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Ranking\")));\n  }\n\n}\n\nFeedBack.propTypes = {\n  player: object\n}.isRequired;\n\nconst mapStateToProps = _ref => {\n  let {\n    player,\n    ranking\n  } = _ref;\n  return {\n    player,\n    ranking\n  };\n};\n\nexport default connect(mapStateToProps)(FeedBack);","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/Pages/FeedBack.jsx"],"names":["React","Component","connect","object","Header","questionIndex","setRanking","S","FeedBack","setLocalStorage","player","gravatarImg","name","score","dispatch","ranking","props","rankingStorage","JSON","parse","localStorage","getItem","push","setItem","stringify","componentDidMount","render","assertions","counterToMessage","history","propTypes","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport Header from '../components/Header';\nimport { questionIndex, setRanking } from '../actions';\nimport * as S from './cssPages/Feedback';\n\nclass FeedBack extends Component {\n  componentDidMount() {\n    this.setLocalStorage();\n  }\n\n  setLocalStorage = () => {\n    const { player: { gravatarImg, name, score }, dispatch, ranking } = this.props;\n    dispatch(setRanking({ name, score, gravatarImg }));\n    let rankingStorage = JSON.parse(localStorage.getItem('ranking'));\n    if (rankingStorage) {\n      rankingStorage.push(...ranking);\n    } else {\n      rankingStorage = ranking;\n    }\n    localStorage.setItem('ranking', JSON.stringify(rankingStorage));\n  }\n\n  render() {\n    const { player: { score, assertions } } = this.props;\n    const counterToMessage = 3;\n    return (\n      <>\n        <Header />\n        <S.Container>\n          <h1>Feedback</h1>\n          <span data-testid=\"feedback-text\">\n            {assertions < counterToMessage\n              ? 'Could be better...' : 'Well Done!'}\n          </span>\n          <span data-testid=\"feedback-total-question\">\n            Você acertou\n          </span>\n          <span>\n            $\n            {assertions}\n            {' '}\n          </span>\n\n          {(assertions === 1)\n            ? <p>questão!</p>\n            : <p>questões!</p>}\n\n          <span>\n            {'E fez um total de pontos: '}\n            <span data-testid=\"feedback-total-score\">\n              {score}\n            </span>\n          </span>\n          <button\n            onClick={ () => {\n              const { history, dispatch } = this.props;\n              dispatch(questionIndex(0));\n\n              history.push('/');\n            } }\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n          >\n            Play Again\n          </button>\n          <button\n            onClick={ () => {\n              const { history } = this.props;\n              history.push('/ranking');\n            } }\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n          >\n            Ranking\n          </button>\n\n        </S.Container>\n      </>\n    );\n  }\n}\n\nFeedBack.propTypes = {\n  player: object,\n}.isRequired;\n\nconst mapStateToProps = ({ player, ranking }) => ({\n  player,\n  ranking,\n});\n\nexport default connect(mapStateToProps)(FeedBack);\n"]},"metadata":{},"sourceType":"module"}
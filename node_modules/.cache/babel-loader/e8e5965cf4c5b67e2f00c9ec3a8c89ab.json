{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shuffle from '../../services/shuffle';\n\nclass Alternatives extends Component {\n  render() {\n    const {\n      correctAnswer,\n      incorrectAnswers\n    } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"answer-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, alternatives.map(element => /*#__PURE__*/React.createElement(\"button\", {\n      key: element,\n      type: \"button\",\n      \"data-testid\": element === correctAnswer ? 'correct-answer' : `wrong-answer-${incorrectAnswers.indexOf(element)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, element)));\n  }\n\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string\n}.isRequired;\nexport default Alternatives;","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trivia-react-redux/src/components/GameplayComponents/Alternatives.jsx"],"names":["React","Component","PropTypes","shuffle","Alternatives","render","correctAnswer","incorrectAnswers","props","alternatives","map","element","indexOf","propTypes","object","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAsC,KAAKC,KAAjD;AACA,UAAMC,YAAY,GAAG,CAACH,aAAD,EAAgB,GAAGC,gBAAnB,CAArB;AACAJ,IAAAA,OAAO,CAACM,YAAD,CAAP;AAEA,wBACE;AAAK,qBAAY,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,CACVC,GADF,CACOC,OAAD,iBACH;AACE,MAAA,GAAG,EAAGA,OADR;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBACEA,OAAO,KAAKL,aAAZ,GACI,gBADJ,GAEK,gBAAeC,gBAAgB,CAACK,OAAjB,CAAyBD,OAAzB,CAAkC,EAN1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASIA,OATJ,CAFH,CADH,CADF;AAkBD;;AAxBkC;;AA2BrCP,YAAY,CAACS,SAAb,GAAyB;AACvBN,EAAAA,gBAAgB,EAAEL,SAAS,CAACY,MADL;AAEvBR,EAAAA,aAAa,EAAEJ,SAAS,CAACa;AAFF,EAGvBC,UAHF;AAKA,eAAeZ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shuffle from '../../services/shuffle';\n\nclass Alternatives extends Component {\n  render() {\n    const { correctAnswer, incorrectAnswers } = this.props;\n    const alternatives = [correctAnswer, ...incorrectAnswers];\n    shuffle(alternatives);\n\n    return (\n      <div data-testid=\"answer-options\">\n        {alternatives\n          .map((element) => (\n            <button\n              key={ element }\n              type=\"button\"\n              data-testid={\n                element === correctAnswer\n                  ? 'correct-answer'\n                  : `wrong-answer-${incorrectAnswers.indexOf(element)}`\n              }\n            >\n              { element }\n            </button>\n          ))}\n      </div>\n    );\n  }\n}\n\nAlternatives.propTypes = {\n  incorrectAnswers: PropTypes.object,\n  correctAnswer: PropTypes.string,\n}.isRequired;\n\nexport default Alternatives;\n"]},"metadata":{},"sourceType":"module"}